@page "/Monitor"
@inject IPlantService PlantService
@rendermode InteractiveServer

<!--***********************************************************************
*	                             CSS/STYLING SECTION                      *
************************************************************************-->
<style>
    .plant-monitor-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        .plant-monitor-table th,
        .plant-monitor-table td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: left;
        }

        .plant-monitor-table th {
            background-color: #f0f0f0;
        }

    .delete-btn {
        background-color: #d9534f;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 5px;
    }

        .delete-btn:hover {
            background-color: #c9302c;
        }
</style>


<!--***********************************************************************
*	                             HTML SECTION                             *
************************************************************************-->
<h3>Monitoring Private Plants</h3>

@if (privatePlantsWithEmails == null)
{
    <p>Loading plants...</p>
}
else if (!privatePlantsWithEmails.Any())
{
    <p>No private plants found.</p>
}
else
{
    <table class="plant-monitor-table">
        <thead>
            <tr>
                <th>Plant ID</th>
                <th>Plant Name</th>
                <th>User ID</th>
                <th>User Email</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (plant, email) in privatePlantsWithEmails)
            {
                <tr>
                    <td>@plant.PLANT_ID</td>
                    <td>@plant.PLANT_NAME</td>
                    <td>@plant.USER_ID</td>
                    <td>@email</td>
                    <td>
                        <button class="delete-btn" @onclick="() => DeletePlant(plant.PLANT_ID)">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!--***********************************************************************
*	                             CODE SECTION                             *
************************************************************************-->
@code {
    private List<(Plants Plant, string Email)>? privatePlantsWithEmails;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        privatePlantsWithEmails = await PlantService.GetAllPrivatePlantsWithEmail();
    }

    private async Task DeletePlant(int plantId)
    {
        var success = await PlantService.DeletePlant(plantId);
        if (success)
        {
            // Re-fetch list after deletion
            await LoadDataAsync();
            StateHasChanged();
        }
    }
}
