@page "/blossom_MVP"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@attribute [StreamRendering(true)]
@inject IPlantService PlantService

<style type="text/css">
    /* Styling for the green box                                             */
    /*************************************************************************/
    .main {
        margin: 50px auto;
        width: 700px;
        padding-top: 10px;
        padding-bottom: 10px;
        background-color: #725D4C;
        border-radius: 20px;
        box-shadow: 10px 10px 8px #888888;
    }
     /* Inner Container for the grid                                          */
     /*************************************************************************/
    .main .inner {
        font-size: 0px;
        display: table;
        text-align: center;
        margin: auto, auto;
        border-radius: 20px;
     }
    
  /* Delete button as a shovel icon in the top-left corner of the tile */
    .delete-button {
        position: absolute;
        top: 10px;
        right: 10px; /* Changed from left to right */
        width: 30px;
        height: 30px;
        background: url('/images/shovel-icon.png') no-repeat center center;
        background-size: contain;
        border: none;
        cursor: pointer;
        outline: none;
    }

    .delete-button:hover {
        opacity: 0.8;
    }

    /*  styles the individual tiles                                          */
    /*************************************************************************/
    .tile {
        margin: 0 auto;
        padding: 50px;
        height: 190px;
        width: 190px;
        border: 20px solid #725D4C;
        background-color: #48BF53;
        display: inline-block;
        position: relative;
        border-radius: 20px;
    }
    }
    /* Styling for the first tile - Tomatoe                                  */
    /*************************************************************************/
    .tile-1 {
        background: url(images/Tomato.png) left -1px top -1px no-repeat, #654321;
        background-size: 75px;
        background-color: #48BF53;
    }
    /* Styling for the second tile - Carrot                                  */
    /*************************************************************************/
    .tile-2 {
        background: url(images/Carrot.png) left -1px top -1px no-repeat, #654321;
        background-size: 75px;
        background-color: #48BF53;
    }

    /* Styling for the plant name - targets spans inside the tiles           */
    /*************************************************************************/
    .tile span {
        position: absolute;
        top: 15%;
        left: 25px;    /* HERE  */
        color: white;
        font-size: 18px;
        font-family: Arial, sans-serif;
    }

    /* Styling for formatting checkbox - targets checkbox input              */
    /*************************************************************************/
    .tile input[type="checkbox"] {
        position: absolute;
        top: 60%;  
        left: 25px; 
    }

    /* Styling for the checkbox label - targets labels                       */
    /*************************************************************************/
    .tile label {
        position: absolute;
        top: 58%;        
        left: 40px;       
        color: black;
        font-family: Arial, sans-serif;
        font-size: 14px;
    }
</style>

<PageTitle>MVP</PageTitle>

<h1>Blossom MVP</h1>
<AddPlantButton/>


<!-- Main content block for displaing the tile grid -->
<div class="main">
    @if (plant == null || !plant.Any())
    {
            <p>No plants available</p>
    }
    else
    {
        <div class="inner" style="border-radius: 20px;">
        @foreach (var p in plant)
        {
            <div class="tile">
            <!-- Shovel delete button in the top-left corner -->
            <button @onclick="() => func(p.PLANT_ID)" class="delete-button"></button>

            <span>@p.PLANT_NAME</span>
            <input type="checkbox" id="watering-@p.PLANT_ID" name="watering-@p.PLANT_ID">
            <label for="watering-@p.PLANT_ID">Watering</label>
            </div>
        }
         </div>
    }
</div> 

@code {
    List<Plants>? plant = null;

    protected override async Task OnInitializedAsync()
    {
        plant = await PlantService.GetAllPlants();
    }

    async Task func(int PLANT_ID)
    {
        await PlantService.DeletePlant(PLANT_ID);
    }
}