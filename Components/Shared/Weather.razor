@page "/weather"
@attribute [StreamRendering]

@inject IJSRuntime JSRuntime

<PageTitle>Weather</PageTitle>

<!--***********************************************************************
*	                             CSS/STYLING SECTION                      *
************************************************************************-->
<style>
    /* Import Merriweather font */
    @@import url('https://fonts.googleapis.com/css2?family=Merriweather:wght@300;400;700&display=swap');

    /* Apply the same font and color */
    body {
        font-family: 'Merriweather', serif;
        color: #2C6E49; /* Matches HomePage text color */
    }

    h1, h3 {
        color: #2C6E49; /* Ensures headers have the same color */
    }
</style>

<!--***********************************************************************
*	                               HTML SECTION                           *
************************************************************************-->
<div class="weather-container" style="width: 438px">
    <h3>Weather Forecast</h3>
    <div class="tomorrow"
         data-location-id="124045"
         data-language="EN"
         data-unit-system="IMPERIAL"
         data-skin="light"
         data-widget-type="aqiPollen"
         style="padding-bottom: 22px; position: relative; width: 438px !important">
        <a href="https://www.tomorrow.io/weather-api/"
           rel="nofollow noopener noreferrer"
           target="_blank"
           style="position: absolute; bottom: 0; transform: translateX(-50%); left: 50%;">
            <img alt="Powered by the Tomorrow.io Weather API"
                 src="https://weather-website-client.tomorrow.io/img/powered-by.svg"
                 width="250"
                 height="18" />
        </a>
    </div>
</div>

<!--***********************************************************************
*	                               CODE SECTION                           *
************************************************************************-->
@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("renderTomorrowWidget");
        }
    }
}
