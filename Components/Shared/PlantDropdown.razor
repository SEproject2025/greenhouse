@code {
    public class Plantimage
    {
        public string Name { get; set; } = string.Empty;
        public string ImageUrl { get; set; } = string.Empty;
    }

    private List<Plantimage> plants = new()
    {
        new Plantimage { Name = "Beats",       ImageUrl = "images/Beats.webp" },
        new Plantimage { Name = "Broccoli",    ImageUrl = "images/Broccoli.webp" },
        new Plantimage { Name = "Cabbage",     ImageUrl = "images/Cabbage.webp" },
        new Plantimage { Name = "Carrot",      ImageUrl = "images/Carrot.webp" },
        new Plantimage { Name = "Cauliflower", ImageUrl = "images/Cauliflower.webp" },
        new Plantimage { Name = "Cucumbers",   ImageUrl = "images/Cucumbers.webp" },
        new Plantimage { Name = "Eggplant",    ImageUrl = "images/Eggplant.webp" },
        new Plantimage { Name = "Green Beans", ImageUrl = "images/GreenBeans.webp" },
        new Plantimage { Name = "Lettuce",     ImageUrl = "images/Lettuce.webp" },
        new Plantimage { Name = "Onions",      ImageUrl = "images/Onions.webp" },
        new Plantimage { Name = "Peas",        ImageUrl = "images/Peas.webp" },
        new Plantimage { Name = "Peppers",     ImageUrl = "images/Peppers.webp" },
        new Plantimage { Name = "Potatoes",    ImageUrl = "images/Potatoes.webp" },
        new Plantimage { Name = "Pumpkins",    ImageUrl = "images/Pumpkins.webp" },
        new Plantimage { Name = "Radishes",    ImageUrl = "images/Radishes.webp" },
        new Plantimage { Name = "Squash",      ImageUrl = "images/Squash.webp" },
        new Plantimage { Name = "Sunflower",   ImageUrl = "images/Sunflower.webp" },
        new Plantimage { Name = "Tomato",      ImageUrl = "images/Tomato.webp" },
        new Plantimage { Name = "Watermelon",  ImageUrl = "images/Watermelon.webp" },
        new Plantimage { Name = "Zucchini",    ImageUrl = "images/Zucchini.webp" }
    };

    private Plantimage? selectedPlant;

    private bool isDropdownOpen = false;

    private void SelectPlant(Plantimage plant)
    {
        selectedPlant = plant;
        isDropdownOpen = false;
    }

    private void ToggleDropdown()
    {
        isDropdownOpen = !isDropdownOpen;
    }
}

<!-- Dropdown Menu -->
<div class="dropdown">
    <button class="dropdown-button" @onclick="ToggleDropdown">
        @if (selectedPlant != null)
        {
            <img src="@selectedPlant.ImageUrl" alt="@selectedPlant.Name" width="30" />
            <span>@selectedPlant.Name</span>
        }
        else
        {
            <span>-- Select a Plant --</span>
        }
    </button>

    @if (isDropdownOpen)
    {
        <div class="dropdown-content">
            @foreach (var plant in plants)
            {
                <div class="dropdown-item" @onclick="() => SelectPlant(plant)">
                    <img src="@plant.ImageUrl" alt="@plant.Name" width="30" />
                    <span>@plant.Name</span>
                </div>
            }
        </div>
    }
</div>

<style>
    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 15px;
        font-size: 16px;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .dropdown-button img {
        border-radius: 50%;
    }

    .dropdown-content {
        display: block;
        position: absolute;
        background-color: white;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
        z-index: 1;
        min-width: 160px;
        max-height: 200px;
        overflow-y: auto;
        border-radius: 5px;
        margin-top: 5px;
    }

    .dropdown-item {
        display: flex;
        align-items: center;
        padding: 10px;
        cursor: pointer;
        gap: 10px;
    }

    .dropdown-item:hover {
        background-color: #f1f1f1;
    }

    .dropdown-item img {
        width: 30px;
        height: 30px;
        border-radius: 50%;
    }
</style>