@using System.Globalization

<!--**********************************************************************-->
<!--                             CALENDAR CSS                             -->
<!--**********************************************************************-->
<style>
    <!-- the outer square -->
    .calendar-container {
    background: white;
    padding: 10px;    <!-- Outer square-->
    border-radius: 15px; <!-- rounded edges -->
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    width: 100%;
    /*max-width: 700px;*/
    text-align: center;
    }

    <!-- The title -->
    .calendar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    }

    <!-- The title text -->
    .calendar-header h3 {
    color: #2C6E49;
    font-size: 20px;
    }

    .calendar-nav {
    display: flex;
    gap: 10px;
    }

    .calendar-nav button {
    background-color: #6BBF59;
    color: white;
    border: none;
    padding: 8px 12px;
    border-radius: 6px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    }

    .calendar-nav button:hover {
    background-color: #5AA74E;
    }

    .calendar-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 3px;
    }

    <!-- The day tiles themselves -->
    .calendar-day {
    background: #F8FFF8;
    padding: 8px;
    border-radius: 10px;
    text-align: center;
    font-size: 10px;
    font-weight: bold;
    color: #4F7942;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    }

    .calendar-day.current {
    background-color: #6BBF59;
    color: white;
    font-weight: bold;
    }

    .day-names {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 10px;  /* Spacing between day names */
    font-weight: bold;
    text-align: center;
    margin-bottom: 10px;
    color: #2C6E49;
    }
</style>

<!--**********************************************************************-->
<!--                             CALENDAR UI                              -->
<!--**********************************************************************-->
<div class="calendar-container">
    <div class="calendar-header">
        <button @onclick="PreviousMonth">❮</button>
        <h3>@currentMonthName @currentYear</h3>
        <button @onclick="NextMonth">❯</button>
    </div>
    <div class="day-names">
        <span>Sun</span><span>Mon</span><span>Tue</span><span>Wed</span><span>Thu</span><span>Fri</span><span>Sat</span>
    </div>
    <div class="calendar-grid">
        @foreach (var day in calendarDays)
        {
            <div class="calendar-day @(day.IsCurrent ? "current" : "")">@day.Day</div>
        }
    </div>
</div>

<!--**********************************************************************-->
<!--                                CODE                                  -->
<!--**********************************************************************-->
@code {
    [Parameter]
    public DateTime SelectedDate { get; set; } // Default to today

    private int currentYear;
    private int currentMonth;
    private int currentDay;
    private string currentMonthName => CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(currentMonth);
    private List<CalendarDay> calendarDays = new();

    protected override void OnInitialized()
    {
        currentYear = SelectedDate.Year;
        currentMonth = SelectedDate.Month;
        currentDay = SelectedDate.Day;
        GenerateCalendar();
    }

    private void GenerateCalendar()
    {
        calendarDays.Clear();
        var firstDay = new DateTime(currentYear, currentMonth, 1);
        var daysInMonth = DateTime.DaysInMonth(currentYear, currentMonth);
        var firstDayOfWeek = (int)firstDay.DayOfWeek; // Get the weekday (0 = Sunday, 1 = Monday, ..., 6 = Saturday)

        // Add empty slots for alignment
        for (int i = 0; i < firstDayOfWeek; i++)
        {
            calendarDays.Add(new CalendarDay { Day = null }); // Use 0 for empty placeholders
        }
        for (int i = 1; i <= daysInMonth; i++)
        {
            calendarDays.Add(new CalendarDay
                {
                    Day = i,
                    IsCurrent = (currentYear == SelectedDate.Year && currentMonth == SelectedDate.Month && i == SelectedDate.Day)
                });
        }
    }

    private void PreviousMonth()
    {
        if (currentMonth == 1)
        {
            currentMonth = 12;
            currentYear--;
        }
        else
        {
            currentMonth--;
        }
        GenerateCalendar();
    }

    private void NextMonth()
    {
        if (currentMonth == 12)
        {
            currentMonth = 1;
            currentYear++;
        }
        else
        {
            currentMonth++;
        }
        GenerateCalendar();
    }

    private class CalendarDay
    {
        public int? Day { get; set; }
        public bool IsCurrent { get; set; }
    }
}


